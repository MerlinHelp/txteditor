GOAL: Command-line text editor

TODO:
    Shortterm:
        1. For all functions that write to the screen, utilize the abuf struct
        and ab_append function newly built to have only 1 write in function. 
        2. TODO ITEM IN editor_io.c:14 (Change printKeysMode to have MACROS or
        to combine with currEditingMode)
            * I think if we end up combining currEditingMode + printKeysMode,
            * we can make macros for like VIEW (no print) + VIEW_PRINT
            * then for view processor, we can if currEditingMode is VIEW_PRINT
            * print else not, so its all in one var.
        3. BUG: When resizing window, bottom line does not update its spacings
        correctly.
        4. BUG: When running exec file with no args (no filename), it does not
        print rows of empty file correctly.
            * This is due to checking for argc >= 2 in main function. However,
            * if you put in a file name that does not exist, editor_open is
            * attempted to be called (but file does not exist).
            * https://stackoverflow.com/questions/230062/whats-the-best-way-to-check-if-a-file-exists-in-c
            * THANKFULLY, unistd.h has 'access' function, and can check for
            * read perms (R_OK), write perms (W_OK), exec perms (E_OK), and
            * existence of file (F_OK).
            * Apparently, "this is a LBYL (Look Before You Leap) test, but the
            * reliable way to check whether you're allowed to do something with
            * a file is EAFP (Easier to Ask Forgiveness than Permission) â€” that
            * is, you should try the access you want and check the return
            * status."
    Longterm:
        1. BUG: One can still scroll up to see the past commands/history of the
        terminal, but should not be like that...
