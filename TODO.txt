GOAL: Command-line text editor

TODO:
    Shortterm:
        1. For all functions that write to the screen, utilize the abuf struct
        and ab_append function newly built to have only 1 write in function. 
        2. Map Delete/Backspace to delete chars
        4. TODO ITEM IN editor_io.c:14 (Change printKeysMode to have MACROS or
        to combine with currEditingMode)
            * I think if we end up combining currEditingMode + printKeysMode,
            * we can make macros for like VIEW (no print) + VIEW_PRINT
            * then for view processor, we can if currEditingMode is VIEW_PRINT
            * print else not, so its all in one var.
        5. BUG: When resizing window, bottom line does not update its spacings
        correctly.
        6. BUG: When <PgDn> is sent as input near the bottom of the file, it
        inserts a new line and adds a special character, should not be
        happening...
    Longterm:
        1. Get a separate text viewer/editor when running program
        2. Be able to save, make new files, and interact with files (unistd??)
        3. FIGURE OUT WAY TO SCROLL ALL THE WAY RIGHT ONLY WHEN EDITING
        (currEditingMode != EDIT) <- probably correct but I am too lazy to
        worry about that right now
        6. BUG: One can still scroll up to see the past commands/history of the
        terminal, but should not be like that...
